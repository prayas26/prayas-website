{"version":3,"sources":["icons/email.js","icons/chat.js","App.js","serviceWorker.js","index.js"],"names":["Email","size","fill","width","height","id","enableBackground","version","viewBox","xmlSpace","xmlns","points","Chat","x","y","d","App","useEffect","window","ChatGen","loaded","s","document","createElement","type","async","src","fs","getElementsByTagName","parentNode","insertBefore","onload","widgetKey","widget_key","init","mobile","desktop","widget","getElementById","cleanWidget","body","removeChild","className","onClick","open","href","style","color","startInteraction","interactionId","defaultProps","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2OAEe,SAASA,EAAT,GAAgC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACpC,OACE,yBACEC,MAAOF,EACPG,OAAO,OACPC,GAAG,UACHC,iBAAiB,kBACjBC,QAAQ,MACRC,QAAQ,cACRC,SAAS,WACTC,MAAM,8BAEN,2BACE,6BACER,KAAMA,EACNS,OAAO,6HAET,6BACET,KAAMA,EACNS,OAAO,iCCnBF,SAASC,EAAT,GAA+B,IAAfX,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KACnC,OACE,yBACEK,QAAQ,MACRF,GAAG,UACHK,MAAM,6BACNG,EAAE,MACFC,EAAE,MACFX,MAAOF,EACPG,OAAO,OACPI,QAAQ,YACRF,iBAAiB,gBACjBG,SAAS,YAET,2BACE,2BACE,0BAAMP,KAAMA,EAAMa,EAAE,4LCbf,SAASC,IA0BtB,OAzBAC,qBAAU,WAER,KADQC,OAAOC,SAAW,IACnBC,OAAQ,CACb,IAAIC,EAAIC,SAASC,cAAc,UAC/BF,EAAEG,KAAO,kBACTH,EAAEI,OAAQ,EACVJ,EAAEK,IAAF,gDACA,IAAIC,EAAKL,SAASM,qBAAqB,UAAU,GACjDD,EAAGE,WAAWC,aAAaT,EAAGM,GAC9BN,EAAEU,OAAS,WACT,IACMC,EAAY,CAAEC,WADJ,YAGhBf,OAAOC,QAAQe,KAAKF,EADI,CAAEG,OAAQ,CAAEtB,EAAG,GAAIC,EAAG,IAAMsB,QAAS,CAAEvB,EAAG,EAAGC,EAAG,MAI5E,OAAO,WACL,IAAIuB,EAASf,SAASgB,eAAe,sBACjCD,IACFnB,OAAOC,QAAQoB,YAAY,eAC3BjB,SAASkB,KAAKC,YAAYJ,OAG7B,IAGD,6BACE,2BAAOK,UAAU,gBACf,gCACE,2BACE,yBAAKhB,IAAI,oEAEX,6CACA,kDACA,wBAAIgB,UAAU,UAAUC,QAAS,kBAAMzB,OAAO0B,KAAK,qBAAsB,YAAzE,eACA,wBAAIF,UAAU,WAAd,6CAEF,yBAAKA,UAAU,eACb,8KAEF,wBAAIA,UAAU,wBACZ,4BACE,uBAAGG,KAAK,oCACN,uBAAGH,UAAU,iCAAiCI,MAAO,CAAEC,MAAO,eAGlE,4BACE,uBAAGF,KAAK,gCACN,uBAAGH,UAAU,6BAA6BI,MAAO,CAAEC,MAAO,eAG9D,4BACE,uBAAGF,KAAK,kCACN,kBAAC7C,EAAD,CAAOC,KAAM,OAGjB,4BACE,uBAAG0C,QAAS,kBAAMzB,OAAOC,SAAWD,OAAOC,QAAQ6B,iBAAiB,CAAEC,cAAe,WACnF,kBAACrC,EAAD,CAAMX,KAAM,UFpC1BD,EAAMkD,aAAe,CACnBjD,KAAM,OACNC,KAAM,WCLRU,EAAKsC,aAAe,CAClBjD,KAAM,OACNC,KAAM,WEfYiD,QACW,cAA7BjC,OAAOkC,SAASC,UAEe,UAA7BnC,OAAOkC,SAASC,UAEhBnC,OAAOkC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnC,SAASgB,eAAe,SDyHpB,kBAAmBoB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.62a2caa8.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Email({ size, fill }) {\n  return (\n    <svg\n      width={size}\n      height=\"35px\"\n      id=\"Layer_1\"\n      enableBackground='new 0 0 512 512'\n      version=\"1.1\"\n      viewBox=\"0 0 512 512\"\n      xmlSpace=\"preserve\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <g>\n        <polygon\n          fill={fill}\n          points=\"448,384 448,141.8 316.9,241.6 385,319 383,321 304.1,251.4 256,288 207.9,251.4 129,321 127,319 195,241.6    64,142 64,384\"\n        />\n        <polygon\n          fill={fill}\n          points=\"439.7,128 72,128 256,267.9\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nEmail.defaultProps = {\n  size: '35px',\n  fill: '#1f77b4'\n};\n","import React from 'react';\n\nexport default function Chat({ size, fill }) {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Layer_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      width={size}\n      height=\"auto\"\n      viewBox=\"0 0 64 64\"\n      enableBackground=\"new 0 0 64 64\"\n      xmlSpace=\"preserve\"\n    >\n      <g>\n        <g>\n          <path fill={fill} d=\"M32,3C15.4,3,0,16.2,0,30c0,7.8,6.3,14.7,13,19.3c-0.1,1.2-0.9,5.3-5.7,9.8c-0.7,0.7-0.2,1.8,0.8,1.7 c8.6-1,15.5-5.8,16.7-6.7c1.4,0.3,4.6,0.8,7.2,0.8c16.6,0,32-11.2,32-25S48.6,3,32,3z\" />\n        </g>\n      </g>\n    </svg >\n  );\n}\n\nChat.defaultProps = {\n  size: '35px',\n  fill: '#1f77b4'\n};\n","import React, { useEffect } from 'react';\nimport './App.scss';\nimport Email from './icons/email';\nimport Chat from './icons/chat';\n\nexport default function App() {\n  useEffect(() => {\n    var a = window.ChatGen || [];\n    if (!a.loaded) {\n      var s = document.createElement('script');\n      s.type = \"text/javascript\";\n      s.async = true;\n      s.src = `https://app.chatgen.ai/cmp/chat-widget/bot.js`;\n      var fs = document.getElementsByTagName('script')[0];\n      fs.parentNode.insertBefore(s, fs);\n      s.onload = function () {\n        const yourKey = 'ZoDYoqOA';\n        const widgetKey = { widget_key: yourKey };\n        const customPositions = { mobile: { x: 10, y: 10 }, desktop: { x: 0, y: 0 } };\n        window.ChatGen.init(widgetKey, customPositions);\n      }\n    }\n    return () => {\n      var widget = document.getElementById(\"selekt-chat-widget\");\n      if (widget) {\n        window.ChatGen.cleanWidget('cleanWidget');\n        document.body.removeChild(widget);\n      }\n    }\n  }, []);\n\n  return (\n    <div>\n      <aside className=\"profile-card\">\n        <header>\n          <a>\n            <img src=\"https://storage.googleapis.com/storage-prayasmittal/prayas.jpg\" />\n          </a>\n          <h1>Prayas Mittal</h1>\n          <h2>Frontend Developer</h2>\n          <h2 className=\"company\" onClick={() => window.open('https://chatgen.ai', '_blank')}>@chatgen.ai</h2>\n          <h2 className=\"hobbies\">Developer | Guitarist | Traveller | Poet</h2>\n        </header>\n        <div className=\"profile-bio\">\n          <p>\"Frontend Developer and Python Enthusiast working on chatbots in Mumbai. Have a year of industry experience in developing futuristic products\"</p>\n        </div>\n        <ul className=\"profile-social-links\">\n          <li>\n            <a href=\"https://linkedin.com/in/prayas26\">\n              <i className=\"fab fa-linkedin-in social-icon\" style={{ color: '#1e77b4' }} />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/prayas26\">\n              <i className=\"fab fa-twitter social-icon\" style={{ color: '#55acee' }} />\n            </a>\n          </li>\n          <li>\n            <a href=\"mailto:prayas.mittal@gmail.com\">\n              <Email size={35} />\n            </a>\n          </li>\n          <li>\n            <a onClick={() => window.ChatGen && window.ChatGen.startInteraction({ interactionId: 930019 })}>\n              <Chat size={32} />\n            </a>\n          </li>\n        </ul>\n      </aside>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}